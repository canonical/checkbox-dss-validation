#!/bin/bash
set -e

echo -e "\nStep 1/3: Deploying MicroK8s snap"
sudo snap install microk8s --classic --channel=1.29/stable

USER=$(id -nu ${SNAP_UID})
HOME=${SNAP_REAL_HOME}

sudo usermod -a -G microk8s $USER
sudo mkdir -p $HOME/.kube
sudo mkdir -p $HOME/.local/share
sudo chown -f -R $USER $HOME/.kube
sudo chown -f -R $USER $HOME/.local/share

echo -e "\nStep 2/3: Configuring MicroK8s addons"
sudo microk8s enable dns
sudo microk8s enable hostpath-storage
sudo microk8s enable rbac

echo "Waiting for microK8s addons to become ready..."
sudo microk8s.kubectl wait \
  --for=condition=available \
  --timeout 1200s \
  -n kube-system \
  deployment/coredns \
  deployment/hostpath-provisioner
sudo microk8s.kubectl -n kube-system rollout status ds/calico-node

# https://github.com/canonical/microk8s/issues/4453
sudo snap install kubectl --classic --channel=1.29/stable
# hack as redirecting stdout anywhere but /dev/null throws a permission denied error
# see: https://forum.snapcraft.io/t/eksctl-cannot-write-to-stdout/17254/4
sudo microk8s.kubectl config view --raw | tee $HOME/.kube/config > /dev/null

echo -e "\nStep 3/3: Installing Docker"
# Add Docker's official GPG key:
sudo apt-get update
sudo apt-get install ca-certificates curl
sudo install -m 0755 -d /etc/apt/keyrings
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo groupadd -f docker
sudo usermod -aG docker $USER

# Clone DSS repo for K8s manifest files
git clone https://github.com/canonical/data-science-stack /tmp/data-science-stack
